@model ck_project.Models.ProjectSummary

@{
    ViewBag.Title = "ProductsExternal";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    @*<meta name="viewport" content="initial-scale=1.0">*@
    <title>Sale Contract Management System</title>
    <link href="~/Content/bootstrap.sandstone.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Print.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div class="pic2" align="center"><img src="~/Content/Images/proposal_pic2.png" /></div>
    <div class="header"><h2>PRODUCT AND MATERIALS LIST (Exhibit A)</h2></div>
    <table>
        <tr>
            <td style="width:100px; padding-right: 3px; color:gray">PROJECT:</td>
            <td colspan="4" style="width:450px"></td>
            <td style="width:100px; padding-right: 3px; color:gray">BILL TO:</td>
            <td colspan="4" style="width:450px"></td>
        </tr>
        <tr>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">NAME</td>
            <td colspan="3" style="width:300px; border-bottom: 1px dotted gray; font-weight:bold">
                @{ 
                    if (Model.Customer != null)
                    {
                        @Model.Customer.customer_firstname@:&nbsp;@Model.Customer.customer_lastname
                    }
                }
            </td>
            <td style="width:10px"></td>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">NAME</td>
            <td colspan="3" style="width:300px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.Customer != null)
                    {
                        @Model.Customer.customer_firstname@:&nbsp;@Model.Customer.customer_lastname
                    }
                }
            </td>
            <td style="width:100px"></td>
        </tr>
        <tr>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">CITY</td>
            <td colspan="3" style="width:300px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.JobsiteAddress != null)
                    {
                        @Model.JobsiteAddress.city
                    }
                }
            </td>
            <td style="width:100px"></td>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">CITY</td>
            <td colspan="3" style="width:300px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.Lead != null && Model.Lead.customer.address != null)
                    {
                        @Model.Lead.customer.address.city
                    }
                    else if (Model.JobsiteAddress != null)
                    {
                        @Model.JobsiteAddress.city
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">STATE</td>
            <td style="width:100px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.JobsiteAddress != null)
                    {
                        @Model.JobsiteAddress.state
                    }
                }
            </td>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">ZIP</td>
            <td style="width:100px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.JobsiteAddress != null)
                    {
                        @Model.JobsiteAddress.zipcode
                    }
                }
            </td>
            <td style="width:100px"></td>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">STATE</td>
            <td style="width:100px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.Lead != null && Model.Lead.customer.address != null)
                    {
                        @Model.Lead.customer.address.state
                    }
                    else if (Model.JobsiteAddress != null)
                    {
                        @Model.JobsiteAddress.state
                    }
                }
            </td>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">ZIP</td>
            <td style="width:100px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.Lead != null && Model.Lead.customer.address != null)
                    {
                        @Model.Lead.customer.address.zipcode
                    }
                    else if (Model.JobsiteAddress != null)
                    {
                        @Model.JobsiteAddress.zipcode
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">PHONE#</td>
            <td style="width:100px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.Lead != null)
                    {
                        @Model.Lead.phone_number
                    }
                }
            </td>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">ALT#</td>
            <td colspan="2" style="width:200px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.Lead != null)
                    {
                        @Model.Lead.second_phone_number
                    }
                }
            </td>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">PHONE#</td>
            <td style="width:100px; border-bottom: 1px dotted gray; font-weight:bold">
                @{
                    if (Model.Lead != null && Model.Lead.customer.phone_number != null)
                    {
                        @Model.Lead.customer.phone_number
                    }
                    else
                    {
                        @Model.Lead.phone_number
                    }
                }
            </td>
            <td style="width:100px; text-align:right; padding-right: 3px; color:gray">ALT#</td>
            <td colspan="2" style="width:200px; border-bottom: 1px dotted gray; font-weight:bold; padding-left: 3px">
                @{
                    if (Model.Lead != null && Model.Lead.customer.second_phone_number != null)
                    {
                        @Model.Lead.customer.second_phone_number
                    }
                    else
                    {
                        @Model.Lead.second_phone_number
                    }
                }
            </td>
        </tr>
    </table>
    <div style="padding-bottom:10px"></div>
    <table style="width:50%; float:left">
        <tr style="border-top: 1px solid black">
            <td colspan="4" style="width:400px" class="pam_cat_row_left pamex_cat_row_color">CABINETRY</td>
            <td style="width:150px" class="pam_item_header">Location</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            int count = 5;
            if (Model.ProductMapList1 != null)
            {
                foreach (var key in Model.ProductMapList1.Keys)
                {
                    if (key.Equals("CABINETRY", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList1[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                                <tr>
                                    <td colspan="4" class="pam_item_text">@prod.Description</td>
                                    <td class="pam_item_text">@prod.location</td>
                                    <td class="pam_item_price">@prod.price</td>
                                </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td colspan="4" class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px" class="pam_cat_row_left pamex_cat_row_color">HARDWARE</td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double Cabtotal = Model.ProductTotalMap["CABINETRY"];
                        if (Cabtotal != 0)
                        {
                            @Cabtotal
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:50px" class="pam_item_header">Qty</td>
            <td style="width:50px" class="pam_item_header">Mfg.</td>
            <td style="width:100px" class="pam_item_header">Model</td>
            <td style="width:200px" class="pam_item_header">Description</td>
            <td style="width:150px" class="pam_item_header">Location</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            count = 5;
            if (Model.ProductMapList1 != null)
            {
                foreach (var key in Model.ProductMapList1.Keys)
                {
                    if (key.Equals("HARDWARE", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList1[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                            <tr>
                                <td class="pam_item_qty">@prod.quantity</td>
                                <td class="pam_item_text">@prod.manufacture</td>
                                <td class="pam_item_text">@prod.model</td>
                                <td class="pam_item_text">@prod.Description</td>
                                <td class="pam_item_text">@prod.location</td>
                                <td class="pam_item_price">@prod.price</td>
                            </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px" class="pam_cat_row_left pamex_cat_row_color">APPLIANCES</td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double harTotal = Model.ProductTotalMap["HARDWARE"];
                        if (harTotal != 0)
                        {
                            @harTotal
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:50px" class="pam_item_header">Qty</td>
            <td style="width:50px" class="pam_item_header">Mfg.</td>
            <td style="width:100px" class="pam_item_header">Model</td>
            <td style="width:200px" class="pam_item_header">Description</td>
            <td style="width:150px" class="pam_item_header">Location</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            count = 5;
            if (Model.ProductMapList1 != null)
            {
                foreach (var key in Model.ProductMapList1.Keys)
                {
                    if (key.Equals("APPLIANCES", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList1[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                            <tr>
                                <td class="pam_item_qty">@prod.quantity</td>
                                <td class="pam_item_text">@prod.manufacture</td>
                                <td class="pam_item_text">@prod.model</td>
                                <td class="pam_item_text">@prod.color</td>
                                <td class="pam_item_text">@prod.Description</td>
                                <td class="pam_item_price">@prod.price</td>
                            </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px" class="pam_cat_row_left pamex_cat_row_color">OWNER PROVIDED PRODUCT</td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double appTotal = Model.ProductTotalMap["APPLIANCES"];
                        if (appTotal != 0)
                        {
                            @appTotal
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:50px" class="pam_item_header">Qty</td>
            <td colspan="4" style="width:700px" class="pam_item_header">Description</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            count = 5;
            if (Model.ProductMapList1 != null)
            {
                foreach (var key in Model.ProductMapList1.Keys)
                {
                    if (key.Equals("OWNER PROVIDED PRODUCT", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList1[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                            <tr>
                                <td class="pam_item_qty">@prod.quantity</td>
                                <td colspan="4" class="pam_item_text">@prod.Description</td>
                                <td class="pam_item_price">@prod.price</td>
                            </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td class="pam_item_nodata"></td>
                        <td colspan="4" class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px" class="pam_cat_row_left pamex_cat_row_color">ACCESSORIES & MIRRORS</td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double ownTotal = Model.ProductTotalMap["OWNER PROVIDED PRODUCT"];
                        if (ownTotal != 0)
                        {
                            @ownTotal
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:50px" class="pam_item_header">Qty</td>
            <td style="width:50px" class="pam_item_header">Mfg.</td>
            <td style="width:100px" class="pam_item_header">Model</td>
            <td colspan="2" style="width:350px" class="pam_item_header">Finish/Description</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            count = 5;
            if (Model.ProductMapList1 != null)
            {
                foreach (var key in Model.ProductMapList1.Keys)
                {
                    if (key.Equals("ACCESSORIES & MIRRORS", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList1[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                            <tr>
                                <td class="pam_item_qty">@prod.quantity</td>
                                <td class="pam_item_text">@prod.manufacture</td>
                                <td class="pam_item_text">@prod.model</td>
                                <td colspan="2" class="pam_item_text">@prod.Description</td>
                                <td class="pam_item_price">@prod.price</td>
                            </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td colspan="2" class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px; border-right: 1px solid black"></td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double accTotal = Model.ProductTotalMap["ACCESSORIES & MIRRORS"];
                        if (accTotal != 0)
                        {
                            @accTotal
                        }
                    }
                }
            </td>
        </tr>
    </table>
    <table style="width:50%; float:left">
        <tr style="border-top: 1px solid black">
            <td colspan="4" style="width:400px" class="pam_cat_row_right pamex_cat_row_color">COUNTERS</td>
            <td style="width:150px" class="pam_item_header">Location</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            count = 5;
            if (Model.ProductMapList2 != null)
            {
                foreach (var key in Model.ProductMapList2.Keys)
                {
                    if (key.Equals("COUNTERS", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList2[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                            <tr>
                                <td colspan="4" class="pam_item_text2">@prod.Description</td>
                                <td class="pam_item_text">@prod.location</td>
                                <td class="pam_item_price">@prod.price</td>
                            </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td colspan="4" class="pam_item_nodata2"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px" class="pam_cat_row_right pamex_cat_row_color">SINK, STRAINER, FAUCET, FITTINGS</td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double couTotal = Model.ProductTotalMap["COUNTERS"];
                        if (couTotal != 0)
                        {
                            @couTotal
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:50px" class="pam_item_header2">Qty</td>
            <td style="width:50px" class="pam_item_header">Mfg.</td>
            <td style="width:100px" class="pam_item_header">Model</td>
            <td style="width:200px" class="pam_item_header">Description</td>
            <td style="width:150px" class="pam_item_header">Location</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            count = 5;
            if (Model.ProductMapList2 != null)
            {
                foreach (var key in Model.ProductMapList2.Keys)
                {
                    if (key.Equals("SINK, STRAINER, FAUCET, FITTINGS", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList2[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                            <tr>
                                <td class="pam_item_qty2">@prod.quantity</td>
                                <td class="pam_item_text">@prod.manufacture</td>
                                <td class="pam_item_text">@prod.model</td>
                                <td class="pam_item_text">@prod.color</td>
                                <td class="pam_item_text">@prod.Description</td>
                                <td class="pam_item_price">@prod.price</td>
                            </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td class="pam_item_nodata2"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px" class="pam_cat_row_right pamex_cat_row_color">DECORATIVE SURFACES</td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double sinTotal = Model.ProductTotalMap["SINK, STRAINER, FAUCET, FITTINGS"];
                        if (sinTotal != 0)
                        {
                            @sinTotal
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:50px" class="pam_item_header2">Qty</td>
            <td colspan="2" style="width:150px" class="pam_item_header">Source</td>
            <td colspan="2" style="width:350px" class="pam_item_header">Description</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            count = 5;
            if (Model.ProductMapList2 != null)
            {
                foreach (var key in Model.ProductMapList2.Keys)
                {
                    if (key.Equals("DECORATIVE SURFACES", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList2[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                            <tr>
                                <td class="pam_item_qty2">@prod.quantity</td>
                                <td colspan="2" class="pam_item_text">@prod.product_source</td>
                                <td colspan="2" class="pam_item_text">@prod.Description</td>
                                <td class="pam_item_price">@prod.price</td>
                            </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td class="pam_item_nodata2"></td>
                        <td colspan="2" class="pam_item_nodata"></td>
                        <td colspan="2" class="pam_item_nodata"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px" class="pam_cat_row_right pamex_cat_row_color">ADDITIONAL ITEMS</td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double decTotal = Model.ProductTotalMap["DECORATIVE SURFACES"];
                        if (decTotal != 0)
                        {
                            @decTotal
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td colspan="5" style="width:350px" class="pam_item_header2">Description</td>
            <td style="width:150px" class="pam_item_header">Price</td>
        </tr>
        @{
            count = 5;
            if (Model.ProductMapList2 != null)
            {
                foreach (var key in Model.ProductMapList2.Keys)
                {
                    if (key.Equals("ADDITIONAL ITEMS", StringComparison.OrdinalIgnoreCase))
                    {
                        var prodList = Model.ProductMapList2[key];
                        if (prodList.Count != 0)
                        {
                            foreach (var prod in prodList)
                            {
                            <tr>
                                <td colspan="5" class="pam_item_text2">@prod.Description</td>
                                <td class="pam_item_price">@prod.price</td>
                            </tr>
                                count--;
                            }
                        }
                        break;
                    }
                }
            }

            if (count > 0)
            {
                for (int i = count; i > 0; i--)
                {
                    <tr>
                        <td colspan="5" class="pam_item_nodata2"></td>
                        <td class="pam_item_nodata"></td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="4" style="width:400px; border-right: 1px solid black"></td>
            <td style="width:150px" class="pam_total_col">TOTAL $</td>
            <td style="width:150px" class="pam_totalprice_col">
                @{
                    if (Model.ProductTotalMap != null)
                    {
                        double addTotal = Model.ProductTotalMap["ADDITIONAL ITEMS"];
                        if (addTotal != 0)
                        {
                            @addTotal
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td colspan="6" style="height:20px"></td>
        </tr>
        <tr>
            <td colspan="6" class="pamex_cat_row_color" style="font-weight: bolder; text-align:center; border: 1px solid black;">CONTRACT TOTALS</td>
        </tr>
        <tr>
            <td colspan="5" style="text-align:right; padding-right:3px">Product / Merchandise</td>
            <td class="pam_item_price">
                @{
                    if (Model.TotalCost != null)
                    {
                        @Model.TotalCost.product_cost
                    }
                }
            </td>
        </tr>
        <tr>
            <td colspan="5" style="text-align:right; padding-right:3px">Construction Materials</td>
            <td class="pam_item_price">
                @{
                    if (Model.Lead != null && Model.Lead.installations != null)
                    {
                        foreach (var item in Model.Lead.installations)
                        {
                            @item.total_construction_materials_cost
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td colspan="5" style="text-align:right; padding-right:3px">Installation Labor</td>
            <td class="pam_item_price">
                @{
                    if (Model.Lead != null && Model.Lead.installations != null)
                    {
                        foreach (var item in Model.Lead.installations)
                        {
                            @item.total_installation_labor_cost
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td colspan="5" style="text-align:right; padding-right:3px">Related Taxes, Permits & Fees</td>
            <td class="pam_item_price">
                @{
                    if (Model.TotalCost != null)
                    {
                        @Model.TotalCost.tax_cost
                    }
                }
            </td>
        </tr>
        <tr>
            <td colspan="5" style="font-weight: bolder; text-align:right; padding-right:3px">TOTAL ORDER $</td>
            <td style="width:150px; font-weight: bolder; border: 2px solid black; text-align:right; padding-right:3px">
                @{
                    if (Model.TotalCost != null)
                    {
                        @Model.TotalCost.total_cost1
                    }
                }
            </td>
        </tr>
    </table>
    <div style="clear:both; padding-top:20px; padding-bottom:20px; width:100%; padding-left: 27%" >
        <input type="checkbox" onclick="return false;"/>
        <label style="padding-left:30px; padding-top:3px; font-weight:normal">Check Box if donations are being made to Habitat for Humanity</label>
    </div>
    <table style="width: 100%">
        <tr>
            <td style="width:500px; text-align: right">
                @{ 
                    if (Model.Lead != null)
                    {
                        @Model.Lead.branch.address.address1@:&#44;&nbsp;@Model.Lead.branch.address.city&#44;&nbsp;@Model.Lead.branch.address.state&nbsp;@Model.Lead.branch.address.zipcode
                    }
                }
            </td>
            <td style="width:180px; text-align:right">Phone:
                @{ 
                    if (Model.Lead != null)
                    {
                        @Model.Lead.branch.phone_number
                    }
                }
            </td>
            <td style="padding-left:10px">Fax
                @{
                    if (Model.Lead != null)
                    {
                        @Model.Lead.branch.fax_number
                    }
                }
            </td>
        </tr>
    </table>
    <div align="center" style="padding-top: 20px">Contractor License #WV 002910</div>
</body>
</html>
